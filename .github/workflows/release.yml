name: Release Binary

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  VERSION: "v0.0.0" # fallback

jobs:
  create-release:
    name: Create GitHub Release (once)
    runs-on: ubuntu-latest
    steps:
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Create empty release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-release:
    name: Build and Upload Binaries
    needs: create-release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"

      - name: Extract tag version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          mkdir -p dist
          BIN_NAME=snapver-cli_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags "-s -w -X github.com/snapver/snapver-cli/cmd.Version=$VERSION" \
            -o dist/$BIN_NAME .
          tar -czvf dist/$BIN_NAME.tar.gz -C dist $BIN_NAME

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
